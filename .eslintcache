[{"C:\\firstproject\\eCommerceMERN\\client\\src\\index.js":"1","C:\\firstproject\\eCommerceMERN\\client\\src\\reportWebVitals.js":"2","C:\\firstproject\\eCommerceMERN\\client\\src\\App.js":"3","C:\\firstproject\\eCommerceMERN\\client\\src\\pages\\auth\\Login.js":"4","C:\\firstproject\\eCommerceMERN\\client\\src\\pages\\auth\\Register.js":"5","C:\\firstproject\\eCommerceMERN\\client\\src\\pages\\Home.js":"6","C:\\firstproject\\eCommerceMERN\\client\\src\\components\\nav\\Header\\index.js":"7","C:\\firstproject\\eCommerceMERN\\client\\src\\firebase.js":"8","C:\\firstproject\\eCommerceMERN\\client\\src\\pages\\auth\\RegisterComplete.js":"9","C:\\firstproject\\eCommerceMERN\\client\\src\\reducers\\index.js":"10","C:\\firstproject\\eCommerceMERN\\client\\src\\reducers\\user_reducer.js":"11"},{"size":904,"mtime":1606390322153,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":1328,"mtime":1606399458237,"results":"15","hashOfConfig":"13"},{"size":3262,"mtime":1606404069159,"results":"16","hashOfConfig":"13"},{"size":1723,"mtime":1606401870725,"results":"17","hashOfConfig":"13"},{"size":130,"mtime":1606212594325,"results":"18","hashOfConfig":"13"},{"size":2128,"mtime":1606405572622,"results":"19","hashOfConfig":"13"},{"size":780,"mtime":1606374979755,"results":"20","hashOfConfig":"13"},{"size":3565,"mtime":1606374754574,"results":"21","hashOfConfig":"13"},{"size":181,"mtime":1606390328331,"results":"22","hashOfConfig":"13"},{"size":239,"mtime":1606385561517,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hzpsot",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\firstproject\\eCommerceMERN\\client\\src\\index.js",[],"C:\\firstproject\\eCommerceMERN\\client\\src\\reportWebVitals.js",[],["48","49"],"C:\\firstproject\\eCommerceMERN\\client\\src\\App.js",["50"],"C:\\firstproject\\eCommerceMERN\\client\\src\\pages\\auth\\Login.js",["51","52"],"C:\\firstproject\\eCommerceMERN\\client\\src\\pages\\auth\\Register.js",[],"C:\\firstproject\\eCommerceMERN\\client\\src\\pages\\Home.js",[],"C:\\firstproject\\eCommerceMERN\\client\\src\\components\\nav\\Header\\index.js",[],"C:\\firstproject\\eCommerceMERN\\client\\src\\firebase.js",[],"C:\\firstproject\\eCommerceMERN\\client\\src\\pages\\auth\\RegisterComplete.js",["53","54"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { auth } from '../../firebase.js'\r\n\r\nimport { toast } from 'react-toastify'\r\nconst RegisterComplete = ({ history }) => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [confirmPassword, setConfirmPassword] = useState('');\r\n\tconst [errors, setError] = useState([]);\r\n\tconst [isEmailFilled, setIsEmailFilled] = useState(!window.localStorage.getItem('emailForSignIn'))\r\n\t\r\n\tconst isPasswordValid = () => {\r\n\t\t\r\n\t\treturn (\r\n\t\t\tpassword !== confirmPassword? \r\n\t\t\t{error: {message: 'Check your password confirmation'}} :\r\n\t\t\tpassword.length < 6?\r\n\t\t\t{error: {message : 'Password should be at least 6 characters'}} :\r\n\t\t\ttrue\r\n\t\t)\r\n\t\t\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\t// Get the email if available. This should be available if the user completes\r\n\t\t// the flow on the same device where they started it.\r\n\t\tsetEmail(window.localStorage.getItem('emailForSignIn'));\r\n\t \tif (!window.localStorage.getItem('emailForSignIn')) {\r\n\t\t    // User opened the link on a different device. To prevent session fixation\r\n\t\t    // attacks, ask the user to provide the associated email again. For example:\r\n\t    \ttoast.info('Please provide your email for confirmation');\r\n\t  \t}\r\n\t}, [])\r\n\t\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault()\r\n\t\t//  Confirm the link is a sign-in with email link.\r\n\t\tif (auth.isSignInWithEmailLink(window.location.href)) {\r\n\t\t\ttry {\r\n\t\t\t\tif(isPasswordValid() === true){\r\n\t\t\t\t\t\r\n\t\t\t\t  \tconst result = await auth.signInWithEmailLink(email, window.location.href);\r\n\t\t\t      \t// You can access the new user via result.user\r\n\t\t\t      \t// Additional user info profile not available via:\r\n\t\t\t     \t// result.additionalUserInfo.profile == null\r\n\t\t\t     \t// You can check if the user is new or existing:\r\n\t\t\t    \t// result.additionalUserInfo.isNewUser\r\n\t\t\t    \tif(result.user.emailVerified){\r\n\t\t\t    \t\twindow.localStorage.removeItem('emailForSignIn')\r\n\t\t\t\t    \tlet user = auth.currentUser\r\n\t\t\t\t    \tawait user.updatePassword(password)\r\n\t\t\t\t    \tconst userIdToken = await user.getIdTokenResult()\r\n\t\t\t\t    \tconsole.log('user', user, 'idTokenResult', userIdToken)\r\n\t\t\t\t    \t// redux store\r\n\r\n\t\t\t\t    \t// redirect\r\n\t\t\t\t    \thistory.push('/')\r\n\t\t\t    \t}\r\n\t\t\t    \t\r\n\t\t\t\t} else {\r\n\t\t    \t\ttoast.error(isPasswordValid().error.message)\r\n\t\t\t\t}\r\n\r\n\t\t      \r\n\t\t\t } catch(error) {\r\n\t\t\t  \tsetError([...errors, error])\r\n\t\t\t  \ttoast.error(error.message)\r\n\t\t\t }\r\n\t\t}\r\n\t\t\t\t  \r\n\t\t    \r\n\r\n\t}\r\n\r\n\t\r\n\tconst RegisterCompleteForm = () => {\r\n\r\n\t\treturn(\t\t\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t\tclassName='form-control' \r\n\t\t\t\t\tid='email'\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={(e) =>setEmail(e.target.value)}\r\n\t\t\t\t\tplaceholder='Email'\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tclassName='form-control' \r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t/>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='password'\r\n\t\t\t\t\tclassName='form-control' \r\n\t\t\t\t\tvalue={confirmPassword}\r\n\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\tplaceholder='Confirm Password'\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<button type='sybmit' className=\"btn btn-raised\">\r\n\t\t\t\t\t\tComplete\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t)  \t\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=\"container p-5\">\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-md-6 offset-md-3'>\r\n\t\t\t\t\t<h1>Comlete registration</h1>\r\n\t\t\t\t\t{RegisterCompleteForm()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterComplete","C:\\firstproject\\eCommerceMERN\\client\\src\\reducers\\index.js",[],"C:\\firstproject\\eCommerceMERN\\client\\src\\reducers\\user_reducer.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":34,"column":6,"nodeType":"61","endLine":34,"endColumn":8,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":16,"column":9,"nodeType":"65","messageId":"66","endLine":16,"endColumn":15},{"ruleId":"63","severity":1,"message":"67","line":16,"column":17,"nodeType":"65","messageId":"66","endLine":16,"endColumn":25},{"ruleId":"63","severity":1,"message":"68","line":11,"column":9,"nodeType":"65","messageId":"66","endLine":11,"endColumn":22},{"ruleId":"63","severity":1,"message":"69","line":11,"column":24,"nodeType":"65","messageId":"66","endLine":11,"endColumn":40},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'isEmailFilled' is assigned a value but never used.","'setIsEmailFilled' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [dispatch]",{"range":"75","text":"76"},[955,957],"[dispatch]"]